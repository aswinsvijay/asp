/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type GetMethodConfig = ControllerInfo & {
  pathParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  queryParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  requestBody?: null;
  response: HttpJsonSchemaOrgDraft04Schema;
};
/**
 * @minItems 1
 */
export type SchemaArray = [HttpJsonSchemaOrgDraft04Schema, ...HttpJsonSchemaOrgDraft04Schema[]];
/**
 * @minItems 1
 */
export type StringArray = [string, ...string[]];
export type PostMethodConfig = ControllerInfo & {
  pathParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  queryParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  requestBody?: HttpJsonSchemaOrgDraft04Schema;
  response: HttpJsonSchemaOrgDraft04Schema;
};
export type PatchMethodConfig = ControllerInfo & {
  pathParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  queryParams?: {
    properties?: {
      [k: string]: HttpJsonSchemaOrgDraft04Schema;
    };
  };
  requestBody?: HttpJsonSchemaOrgDraft04Schema;
  response: HttpJsonSchemaOrgDraft04Schema;
};

export interface RouterConfig {
  paths?: RouterConfigPaths;
  methods?: PathMethods;
}
export interface RouterConfigPaths {
  [k: string]: RouterConfig;
}
export interface PathMethods {
  get?: GetMethodConfig;
  post?: PostMethodConfig;
  patch?: PatchMethodConfig;
}
export interface ControllerInfo {
  controller: string;
  operationId: string;
}
/**
 * Core schema meta-schema
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 *
 * This interface was referenced by `undefined`'s JSON-Schema definition
 * via the `patternProperty` "*".
 */
export interface HttpJsonSchemaOrgDraft04Schema {
  id?: string;
  $schema?: string;
  title?: string;
  description?: string;
  default?: unknown;
  multipleOf?: number;
  maximum?: number;
  exclusiveMaximum?: boolean;
  minimum?: number;
  exclusiveMinimum?: boolean;
  maxLength?: number;
  minLength?: number;
  pattern?: string;
  additionalItems?: boolean | HttpJsonSchemaOrgDraft04Schema;
  items?: HttpJsonSchemaOrgDraft04Schema | SchemaArray;
  maxItems?: number;
  minItems?: number;
  uniqueItems?: boolean;
  maxProperties?: number;
  minProperties?: number;
  required?: StringArray;
  additionalProperties?: boolean | HttpJsonSchemaOrgDraft04Schema;
  definitions?: {
    [k: string]: HttpJsonSchemaOrgDraft04Schema;
  };
  properties?: {
    [k: string]: HttpJsonSchemaOrgDraft04Schema;
  };
  patternProperties?: {
    [k: string]: HttpJsonSchemaOrgDraft04Schema;
  };
  dependencies?: {
    [k: string]: HttpJsonSchemaOrgDraft04Schema | StringArray;
  };
  /**
   * @minItems 1
   */
  enum?: [unknown, ...unknown[]];
  type?:
    | ('array' | 'boolean' | 'integer' | 'null' | 'number' | 'object' | 'string')
    | [
        'array' | 'boolean' | 'integer' | 'null' | 'number' | 'object' | 'string',
        ...('array' | 'boolean' | 'integer' | 'null' | 'number' | 'object' | 'string')[]
      ];
  format?: string;
  allOf?: SchemaArray;
  anyOf?: SchemaArray;
  oneOf?: SchemaArray;
  not?: HttpJsonSchemaOrgDraft04Schema;
  [k: string]: unknown;
}
